(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{k5xG:function(e,n,c){"use strict";c.r(n),c.d(n,"SampleThirteenModule",function(){return x});var t=c("An66"),l=c("1VvW"),o=c("MRfT"),i=c("5Q2+"),a=c("kZht"),s=c("aJOL"),r=c("WGpx"),m=c("UDV5");function d(e,n){if(1&e){const e=a.mc();a.Vc(0,"\n                    "),a.kc(1,"mat-checkbox",12),a.sc("change",function(){a.Mc(e);const n=a.wc();return a.Lc(31).selection.toggleAll(n.data)}),a.jc(),a.Vc(2,"\n                ")}if(2&e){a.wc();const e=a.Lc(31);a.Rb(1),a.Dc("indeterminate",e.selectionModel.isIndeterminate)("checked",e.selectionModel.isAll)}}function u(e,n){if(1&e){const e=a.mc();a.Vc(0,"\n                    "),a.kc(1,"mat-checkbox",13),a.sc("change",function(){a.Mc(e);const c=n.$implicit;return a.wc(),a.Lc(31).selection.toggle(c)}),a.jc(),a.Vc(2,"\n                ")}if(2&e){const e=n.$implicit;a.wc();const c=a.Lc(31);a.Rb(1),a.Dc("checked",c.selectionModel.get(e.id))}}function b(e,n){1&e&&a.Vc(0),2&e&&a.Xc("\n                    ",n.$implicit,"\n                ")}function k(e,n){if(1&e){const e=a.mc();a.kc(0,"ngx-column",14),a.Vc(1,"\n                "),a.Tc(2,b,1,1,"ng-template",15),a.sc("onClick",function(n){return a.Mc(e),a.wc().rowOnClick(n)}),a.Vc(3,"\n            "),a.jc()}2&e&&a.Dc("key",n.$implicit)}function g(e,n){if(1&e){const e=a.mc();a.Vc(0,"\n                    "),a.kc(1,"mat-checkbox",12),a.sc("change",function(){a.Mc(e);const n=a.wc();return a.Lc(52).selection.toggleAll(n.data)}),a.jc(),a.Vc(2,"\n                ")}if(2&e){a.wc();const e=a.Lc(52);a.Rb(1),a.Dc("indeterminate",e.selectionModel.isIndeterminate)("checked",e.selectionModel.isAll)}}function p(e,n){if(1&e){const e=a.mc();a.Vc(0,"\n                    "),a.kc(1,"mat-checkbox",13),a.sc("change",function(){a.Mc(e);const c=n.$implicit;return a.wc(),a.Lc(52).selection.toggle(c)}),a.jc(),a.Vc(2,"\n                ")}if(2&e){const e=n.$implicit;a.wc();const c=a.Lc(52);a.Rb(1),a.Dc("checked",c.selectionModel.get(e.id))}}function f(e,n){1&e&&a.Vc(0),2&e&&a.Xc("\n                    ",n.$implicit,"\n                ")}function h(e,n){if(1&e){const e=a.mc();a.kc(0,"ngx-column",14),a.Vc(1,"\n                "),a.Tc(2,f,1,1,"ng-template",16),a.sc("dblClick",function(n){return a.Mc(e),a.wc().rowDblClick(n)}),a.Vc(3,"\n            "),a.jc()}2&e&&a.Dc("key",n.$implicit)}let V=(()=>{class e{constructor(e){this.toast=e,this.data=[{id:1,name:"single",price:29.3},{id:2,name:"developer",price:49.8},{id:3,name:"premium",price:99.5},{id:4,name:"enterprise",price:199}]}ngAfterViewInit(){this.update()}update(){document.querySelectorAll("pre code").forEach(e=>{hljs.highlightBlock(e)})}rowOnClick(e){this.toast.success(JSON.stringify(e,null,4),"OnClick",{timeOut:2e3,onActivateTick:!0})}rowDblClick(e){this.toast.success(JSON.stringify(e,null,4),"DblClick",{timeOut:2e3,onActivateTick:!0})}}return e.\u0275fac=function(n){return new(n||e)(a.dc(o.b))},e.\u0275cmp=a.Xb({type:e,selectors:[["sample-thirteen"]],features:[a.Qb([o.b])],decls:74,vars:4,consts:[[1,"simple-toolbar"],[1,"column-samples"],[1,"column"],[1,"html"],["enable-selection","",3,"source"],["tableFirst",""],["key","selection","sticky","","width","55","custom-key",""],["ngx-th",""],["ngx-td","","row","",3,"onClick"],[3,"key",4,"ngFor","ngForOf"],["tableSecond",""],[1,"javascript"],[3,"indeterminate","checked","change"],[3,"checked","change"],[3,"key"],["ngx-td","",3,"onClick"],["ngx-td","",3,"dblClick"]],template:function(e,n){if(1&e&&(a.kc(0,"mat-toolbar",0),a.Vc(1,"\n    "),a.kc(2,"span"),a.Vc(3,"Example mouse events"),a.jc(),a.Vc(4,"\n"),a.jc(),a.Vc(5,"\n\n"),a.kc(6,"div",1),a.Vc(7,"\n    "),a.kc(8,"div",2),a.Vc(9,"\n        "),a.fc(10,"br"),a.Vc(11,"\n        "),a.kc(12,"pre"),a.kc(13,"code",3),a.ec(),a.Vc(14,'\n  <b>OnClick</b>:\n\n  <ngx-table-builder [source]="data" enable-selection #tableFirst>\n      <ngx-column key="selection" sticky width="55" custom-key>\n          <ng-template ngx-th>\n              <mat-checkbox\n                  (change)="tableFirst.selection.toggleAll(data)"\n                  [indeterminate]="tableFirst.selectionModel.isIndeterminate"\n                  [checked]="tableFirst.selectionModel.isAll"\n              ></mat-checkbox>\n          </ng-template>\n          <ng-template ngx-td row let-row (onClick)="$events.preventDefault()">\n              <mat-checkbox\n                  [checked]="tableFirst.selectionModel.get($any(row).id)"\n                  (change)="tableFirst.selection.toggle(row)"\n              ></mat-checkbox>\n          </ng-template>\n      </ngx-column>\n\n      <ngx-column *ngFor="let key of tableFirst.modelColumnKeys" [key]="key">\n          <ng-template ngx-td (onClick)="rowOnClick($events)" let-cell>\n            {{ cell }}\n            </ng-template>\n      </ngx-column>\n  </ngx-table-builder>\n\n  <b>DblClick</b>:\n\n  <ngx-table-builder [source]="data" enable-selection #tableSecond>\n      <ngx-column key="selection" sticky width="55" custom-key>\n          <ng-template ngx-th>\n              <mat-checkbox\n                  (change)="tableSecond.selection.toggleAll(data)"\n                  [indeterminate]="tableSecond.selectionModel.isIndeterminate"\n                  [checked]="tableSecond.selectionModel.isAll"\n              ></mat-checkbox>\n          </ng-template>\n          <ng-template ngx-td row let-row (onClick)="$events.preventDefault()">\n              <mat-checkbox\n                  [checked]="tableSecond.selectionModel.get($any(row).id)"\n                  (change)="tableSecond.selection.toggle(row)"\n              ></mat-checkbox>\n          </ng-template>\n      </ngx-column>\n\n      <ngx-column *ngFor="let key of tableSecond.modelColumnKeys" [key]="key">\n          <ng-template ngx-td (dblClick)="rowDblClick($events)" let-cell>\n            {{ cell }}\n            </ng-template>\n      </ngx-column>\n  </ngx-table-builder>\n\n'),a.lc(),a.jc(),a.jc(),a.Vc(15,"\n\n        "),a.kc(16,"p"),a.Vc(17,"\n            A template reference variable is often a reference to a DOM element within a template. It can also refer to\n            a directive (which contains a component), an element, TemplateRef, or a web component. Use the hash symbol\n            (#) to declare a reference variable. As per Official documentation it is not recommended to give same name\n            for template reference variables as it will yield inconsistent results at runtime. Therefore, use different\n            reference names (#tableFirst, #tableSecond).\n        "),a.jc(),a.Vc(18,"\n    "),a.jc(),a.Vc(19,"\n    "),a.kc(20,"div",2),a.Vc(21,"\n        "),a.fc(22,"br"),a.Vc(23,"\n\n        "),a.kc(24,"b"),a.Vc(25,"OnClick"),a.jc(),a.Vc(26,": "),a.fc(27,"br"),a.fc(28,"br"),a.Vc(29,"\n\n        "),a.kc(30,"ngx-table-builder",4,5),a.Vc(32,"\n            "),a.kc(33,"ngx-column",6),a.Vc(34,"\n                "),a.Tc(35,d,3,2,"ng-template",7),a.Vc(36,"\n                "),a.Tc(37,u,3,1,"ng-template",8),a.sc("onClick",function(e){return e.preventDefault()}),a.Vc(38,"\n            "),a.jc(),a.Vc(39,"\n\n            "),a.Tc(40,k,4,1,"ngx-column",9),a.Vc(41,"\n        "),a.jc(),a.Vc(42,"\n\n        "),a.fc(43,"br"),a.Vc(44,"\n\n        "),a.kc(45,"b"),a.Vc(46,"DblClick"),a.jc(),a.Vc(47,": "),a.fc(48,"br"),a.fc(49,"br"),a.Vc(50,"\n\n        "),a.kc(51,"ngx-table-builder",4,10),a.Vc(53,"\n            "),a.kc(54,"ngx-column",6),a.Vc(55,"\n                "),a.Tc(56,g,3,2,"ng-template",7),a.Vc(57,"\n                "),a.Tc(58,p,3,1,"ng-template",8),a.sc("onClick",function(e){return e.preventDefault()}),a.Vc(59,"\n            "),a.jc(),a.Vc(60,"\n\n            "),a.Tc(61,h,4,1,"ngx-column",9),a.Vc(62,"\n        "),a.jc(),a.Vc(63,"\n\n        "),a.fc(64,"br"),a.Vc(65,"\n        "),a.fc(66,"br"),a.Vc(67,"\n\n        "),a.kc(68,"pre"),a.kc(69,"code",11),a.Vc(70,"\n  // app.component.ts\n  import { TableEvent } from \"@angular-ru/ng-table-builder\";\n  import { Component } from \"@angular/core\";\n  import { ToastService } from \"./toast.service\";\n  import { Data } from \"./data.interface\";\n\n  @Component({\n    selector: 'app',\n    templateUrl: './app.component.html'\n  })\n  export class AppComponent {\n    public data: Data[] = [ .. ];\n    constructor(private toast: ToastService) {}\n\n    public rowOnClick(events: TableEvent): void {\n        this.toast.success('OnClick', events);\n    }\n\n    public rowDblClick(events: TableEvent): void {\n        this.toast.success('DblClick', events);\n    }\n\n  }\n\n"),a.jc(),a.jc(),a.Vc(71,"\n    "),a.jc(),a.Vc(72,"\n"),a.jc(),a.Vc(73,"\n")),2&e){const e=a.Lc(31),c=a.Lc(52);a.Rb(30),a.Dc("source",n.data),a.Rb(10),a.Dc("ngForOf",e.modelColumnKeys),a.Rb(11),a.Dc("source",n.data),a.Rb(10),a.Dc("ngForOf",c.modelColumnKeys)}},directives:[s.a,r.m,r.a,r.q,r.p,t.l,m.a],encapsulation:2,changeDetection:0}),e})(),x=(()=>{class e{}return e.\u0275mod=a.bc({type:e}),e.\u0275inj=a.ac({factory:function(n){return new(n||e)},imports:[[t.b,i.a,o.a,l.b.forChild([{path:"",component:V}])]]}),e})()}}]);