(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{I68A:function(n,e,t){"use strict";t.r(e),t.d(e,"SampleFourthModule",(function(){return v}));var c=t("An66"),a=t("1VvW"),l=t("5Q2+"),o=t("kZht"),m=t("aJOL"),i=t("1ZKX"),p=t("BL99"),s=t("ctyY"),r=t("j5U8");function u(n,e){1&n&&o.Ic(0,"Small")}function b(n,e){1&n&&(o.Ic(0),o.kc(1,"currency")),2&n&&o.Jc(o.lc(1,1,e.$implicit))}function d(n,e){1&n&&o.Ic(0,"Medium")}function g(n,e){1&n&&(o.Ic(0),o.kc(1,"currency")),2&n&&o.Jc(o.lc(1,1,e.$implicit))}function I(n,e){1&n&&o.Ic(0,"Large")}function y(n,e){1&n&&(o.Ic(0),o.kc(1,"currency")),2&n&&o.Jc(o.lc(1,1,e.$implicit))}function h(n,e){1&n&&o.Ic(0,"Date")}function x(n,e){1&n&&(o.Ic(0),o.kc(1,"date")),2&n&&o.Kc("\n                    ",o.mc(1,1,e.$implicit,"dd.MM.yyyy HH:mm"),"\n                ")}let f=(()=>{class n{constructor(){this.data=[],this.elements=[]}ngOnInit(){this.data=[{toppings:["tomato sauce","mozzarella cheese"],prices:{small:"5.00",medium:"6.00",large:"7.00"}},{toppings:["tomato sauce","mozzarella cheese","ham"],prices:{small:"6.50",medium:"7.50",large:"8.50"}}],this.elements=[{position:null,name:"Hydrogen",date:{value:NaN},symbol:"H",status:!0},{position:2,name:"",date:{value:new Date},symbol:void 0,status:!1},{position:3,name:"Lithium",date:{value:1/0},symbol:"Li",status:!0},{position:4,name:"Beryllium",date:{value:0},symbol:"    ",status:!1}]}ngAfterViewInit(){document.querySelectorAll("pre code").forEach(n=>{hljs.highlightBlock(n)})}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275cmp=o.Jb({type:n,selectors:[["sample-fourth"]],decls:101,vars:3,consts:[[1,"simple-toolbar"],[1,"column-samples"],[1,"column"],[1,"javascript"],["auto-width","",3,"source"],["key","toppings","width","350"],["key","prices.small"],["ngx-th",""],["ngx-td",""],["key","prices.medium"],["key","prices.large"],["key","date.value","important-template","",3,"stub"]],template:function(n,e){1&n&&(o.Wb(0,"mat-toolbar",0),o.Ic(1,"\n    "),o.Wb(2,"span"),o.Ic(3,"Example nested models"),o.Vb(),o.Ic(4,"\n"),o.Vb(),o.Ic(5,"\n\n"),o.Wb(6,"div",1),o.Ic(7,"\n    "),o.Wb(8,"div",2),o.Ic(9,"\n        "),o.Wb(10,"pre"),o.Wb(11,"code",3),o.Ic(12,"\n  // app.component.ts\n  import { Component } from \"@angular/core\";\n  import { Pizza } from \"./pizza.interface\";\n\n  @Component({\n    selector: 'app',\n    templateUrl: './app.component.html'\n  })\n  export class AppComponent {\n\n    public pizzas: Pizza[] = [\n        {\n            toppings: ['tomato sauce', 'mozzarella cheese'],\n            prices: {\n              small: '5.00',\n              medium: '6.00',\n              large: '7.00'\n            }\n        },\n        {\n            toppings: ['tomato sauce', 'mozzarella cheese', 'ham'],\n            prices: {\n              small: '6.50',\n              medium: '7.50',\n              large: '8.50'\n            }\n        }\n    ];\n\n  }\n\n"),o.Vb(),o.Vb(),o.Ic(13,"\n    "),o.Vb(),o.Ic(14,"\n    "),o.Wb(15,"div",2),o.Ic(16,"\n        "),o.Wb(17,"pre"),o.Wb(18,"code",3),o.Qb(),o.Ic(19,'\n  \x3c!-- app.component.html --\x3e\n\n  <ngx-table-builder [source]="data" auto-width>\n    <ngx-column key="toppings" width="350"></ngx-column>\n\n    <ngx-column key="prices.small">\n      <ng-template ngx-th>Small</ng-template>\n      <ng-template ngx-td let-cell>{{ cell | currency }}</ng-template>\n    </ngx-column>\n\n     <ngx-column key="prices.small">\n      <ng-template ngx-th>Small</ng-template>\n      <ng-template ngx-td let-cell>{{ cell | currency }}</ng-template>\n    </ngx-column>\n\n    <ngx-column key="prices.small">\n      <ng-template ngx-th>Small</ng-template>\n      <ng-template ngx-td let-cell>{{ cell | currency }}</ng-template>\n    </ngx-column>\n  </ngx-table-builder>\n\n'),o.Xb(),o.Vb(),o.Vb(),o.Ic(20,"\n\n        "),o.Wb(21,"ngx-table-builder",4),o.Ic(22,"\n            "),o.Rb(23,"ngx-column",5),o.Ic(24,"\n\n            "),o.Wb(25,"ngx-column",6),o.Ic(26,"\n                "),o.Gc(27,u,1,0,"ng-template",7),o.Ic(28,"\n                "),o.Gc(29,b,2,3,"ng-template",8),o.Ic(30,"\n            "),o.Vb(),o.Ic(31,"\n\n            "),o.Wb(32,"ngx-column",9),o.Ic(33,"\n                "),o.Gc(34,d,1,0,"ng-template",7),o.Ic(35,"\n                "),o.Gc(36,g,2,3,"ng-template",8),o.Ic(37,"\n            "),o.Vb(),o.Ic(38,"\n\n            "),o.Wb(39,"ngx-column",10),o.Ic(40,"\n                "),o.Gc(41,I,1,0,"ng-template",7),o.Ic(42,"\n                "),o.Gc(43,y,2,3,"ng-template",8),o.Ic(44,"\n            "),o.Vb(),o.Ic(45,"\n        "),o.Vb(),o.Ic(46,"\n    "),o.Vb(),o.Ic(47,"\n"),o.Vb(),o.Ic(48,"\n\n"),o.Rb(49,"br"),o.Ic(50,"\n\n"),o.Wb(51,"div",1),o.Ic(52,"\n    "),o.Wb(53,"div",2),o.Ic(54,"\n        "),o.Wb(55,"ngx-table-builder",4),o.Ic(56,"\n            "),o.Wb(57,"ngx-column",11),o.Ic(58,"\n                "),o.Gc(59,h,1,0,"ng-template",7),o.Ic(60,"\n                "),o.Gc(61,x,2,4,"ng-template",8),o.Ic(62,"\n            "),o.Vb(),o.Ic(63,"\n        "),o.Vb(),o.Ic(64,"\n        "),o.Rb(65,"br"),o.Ic(66,"\n\n        "),o.Wb(67,"pre"),o.Wb(68,"code",3),o.Qb(),o.Ic(69,'\n   \x3c!-- app.component.html --\x3e\n\n   <ngx-table-builder [source]="data" auto-width>\n     \x3c!-- important-template - keyword to override table column styles --\x3e\n     <ngx-column key="date.value" important-template [stub]="null">\n        <ng-template ngx-th>Date</ng-template>\n        <ng-template ngx-td let-date>\n          {{ date | date: \'dd.MM.yyyy HH:mm\' }}\n        </ng-template>\n     </ngx-column>\n   </ngx-table-builder>\n\n        '),o.Xb(),o.Vb(),o.Vb(),o.Ic(70,"\n\n        By default we use '--' for stub invalid value. In some cases, you need not to use a stub. For example, if you\n        leave a stub, an error may occur: "),o.Rb(71,"br"),o.Rb(72,"br"),o.Ic(73,"\n        "),o.Wb(74,"pre"),o.Ic(75," InvalidPipeArgument: 'Unable to convert \"-\" into a date' for pipe 'DatePipe'."),o.Vb(),o.Ic(76,"\n    "),o.Vb(),o.Ic(77,"\n    "),o.Wb(78,"div",2),o.Ic(79,"\n        "),o.Wb(80,"pre"),o.Wb(81,"code",3),o.Qb(),o.Ic(82,"\n  // app.component.ts\n  import { Component } from \"@angular/core\";\n  import { Elements } from \"./elements.interface\";\n\n  @Component({\n    selector: 'app',\n    templateUrl: './app.component.html'\n  })\n  export class AppComponent {\n    public data: Elements[] = [\n     { position: null, name: 'Hydrogen', date: { value: NaN }, symbol: 'H', status: true },\n     { position: 2, name: '', date: { value: new Date() }, symbol: undefined, status: false },\n     { position: 3, name: 'Lithium', date: { value: Infinity }, symbol: 'Li', status: true },\n     { position: 4, name: 'Beryllium', date: { value: 0 }, symbol: '    ', status: false }\n    ];\n  }\n\n"),o.Xb(),o.Vb(),o.Vb(),o.Ic(83,"\n\n        "),o.Wb(84,"p"),o.Ic(85,"\n            "),o.Wb(86,"strong"),o.Ic(87,"Note"),o.Vb(),o.Ic(88,": If you want to override the template body of the table, you just use only ng-template\n            with ngx-td. If you use templating, then you need to specify the keys (example with toppings) in the\n            template in the order in which you want to display your columns.\n        "),o.Vb(),o.Ic(89,"\n\n        "),o.Wb(90,"p"),o.Ic(91,"\n            "),o.Wb(92,"strong"),o.Ic(93,"Note"),o.Vb(),o.Ic(94,": By default, if the cell value is invalid, then the default separator is used. You can\n            override or disable it in the module settings.\n        "),o.Vb(),o.Ic(95,"\n    "),o.Vb(),o.Ic(96,"\n"),o.Vb(),o.Ic(97,"\n\n"),o.Rb(98,"br"),o.Rb(99,"br"),o.Ic(100,"\n")),2&n&&(o.Cb(21),o.qc("source",e.data),o.Cb(34),o.qc("source",e.elements),o.Cb(2),o.qc("stub",null))},directives:[m.a,i.a,p.a,s.a,r.a],pipes:[c.c,c.e],encapsulation:2,changeDetection:0}),n})(),v=(()=>{class n{}return n.\u0275mod=o.Nb({type:n}),n.\u0275inj=o.Mb({factory:function(e){return new(e||n)},imports:[[c.b,l.a,a.b.forChild([{path:"",component:f}])]]}),n})()}}]);